# Maven
# Build your Java projects and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  dockerId: 'cicdpocdev'  # Replace with your Docker ID for Docker Hub or the admin user name for the Azure Container Registry
  imageName: 'springboot-poc'  # Replace with the name of the image you want to publish
  pswd: 'D7tJRxbTr8wbZEPy2sL2Kx8nNyN=KLVd'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.10'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    goals: 'package'

- script: |
    docker build -f DockerFile -t $(dockerId).azurecr.io/$(imageName) .
    docker login -u $(dockerId) -p $(pswd) $(dockerId).azurecr.io
    docker tag $(imageName) $(dockerId).azurecr.io/$(imageName)
    docker push $(dockerId).azurecr.io/$(imageName)
  env:
    pswd: $(dockerPassword)

# Publish Cobertura or JaCoCo code coverage results from a build
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/site/jacoco'
    failIfCoverageEmpty: true

- task: CopyFiles@2
  inputs:
    contents: '**/*.jar'
    targetFolder: '$(build.artifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    artifactName: 'jar'
    pathToPublish: '$(build.artifactStagingDirectory)'



